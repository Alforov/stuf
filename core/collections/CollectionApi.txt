 int size();
 boolean isEmpty();
 boolean contains(Object o);
 Iterator<E> iterator();
 Object[] toArray();
 <T> T[] toArray(T[] a);
 boolean add(E e);
 boolean remove(Object o);
 boolean containsAll(Collection<?> c);
 boolean addAll(Collection<? extends E> c);
 boolean removeAll(Collection<?> c);
  
 boolean retainAll(Collection<?> c);
 void clear();
 boolean equals(Object o);
 int hashCode();

  

 default Spliterator<E> spliterator()
 default Stream<E> stream() {
 default Stream<E> parallelStream() 
 default boolean removeIf(Predicate<? super E> filter) 